apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnect
metadata:
  namespace: debezium
  name: debezium-kafkaconnect
  annotations:
    strimzi.io/use-connector-resources: "true"
spec:
  version: 3.1.0
  replicas: 1
  image: subkanthi/debezium-mysql-source-connector:latest
  bootstrapServers: redpanda.redpanda:9092
#  tls:
#    trustedCertificates:
#      - secretName: my-cluster-cluster-ca-cert
#        certificate: ca.crt

  # https://kafka.apache.org/documentation/#connectconfigs
  #build:
  #  output:
  #    type: docker
  #    image: altinity/debezium-mysql-source-connector:latest
  #    pushSecret: docker-access-secret
  #  plugins:
  #    - name: debezium-mysql-connector
  #      artifacts:
  #        - type: tgz
  #          url: https://repo1.maven.org/maven2/io/debezium/debezium-connector-mysql/1.9.2.Final/debezium-connector-mysql-1.9.2.Final-plugin.tar.gz
  #        - type: tgz
  #          url: https://repo1.maven.org/maven2/io/apicurio/apicurio-registry-distro-connect-converter/2.1.5.Final/apicurio-registry-distro-connect-converter-2.1.5.Final.tar.gz
  config:
    group.id: 1

    # -1 means it will use the default replication factor configured in the broker
    config.storage.topic: config-storage-topic-debezium-5
    config.storage.replication.factor: 1
    config.storage.partitions: 1

    offset.storage.topic: offset-storage-topic-debezium-5
    offset.storage.replication.factor: 1
    offset.storage.partitions: 1

    status.storage.topic: status-storage-topic-debezium-5
    status.storage.replication.factor: 1
    status.storage.partitions: 1

    key.converter: "io.confluent.connect.avro.AvroConverter"
    value.converter: "io.confluent.connect.avro.AvroConverter"
